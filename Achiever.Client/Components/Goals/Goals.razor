@page "/goals"
@using Achiever.Client.Services.Goals
@using Achiever.Shared.Goals
@inject GoalClient GoalClient

<PageTitle>Goals</PageTitle>

<h1>Goals</h1>

@if (_goals == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <button type="button" class="btn btn-primary" @onclick="CreateGoal">Create Goal</button>

    <FluentGrid Templates="(new GridTemplates { Columns = '1fr 1fr 1fr' })">
        @foreach (var goal in _goals)
        {
            <FluentGridItem>
                <GoalCard Goal="@goal" />
            </FluentGridItem>
        }
    </FluentGrid>
}

@code {
    private List<Goal>? _goals;

    [Inject]
    IToastService ToastService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var result = await GoalClient.GetGoalsAsync();

        if(result.IsSuccess)
        {
            _goals = result.Value;
        }
        else
        {
            ToastService.ShowError($"Error retrieving goals: {result?.Message ?? "Unknown Error"}");
            _goals = new List<Goal>();
        }
    }

    protected async Task CreateGoal()
    {
        var goal = new Goal {
            Title = "New Goal" 
        };
        var result = await GoalClient.CreateGoalAsync(goal);
        if(result.IsSuccess)
        {
            goal.Id = result.Value;
            _goals.Add(goal);
        }
        else
        {
            ToastService.ShowError($"Error creating goal: {result?.Message ?? "Unknown Error"}");
        }
        StateHasChanged();
    }
}
